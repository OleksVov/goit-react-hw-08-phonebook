{"version":3,"file":"static/js/186.64fc3b61.chunk.js","mappings":"yMACA,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAyF,0B,SCI5EA,EAAY,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACI,kBAAMC,UAAWC,EAAUC,SAbV,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBR,GACIS,EAAAA,EAAAA,IAAM,CACFC,MAAOH,EAAKI,QAAQD,MAAME,MAC1BC,SAAUN,EAAKI,QAAQE,SAASD,SAGxCL,EAAKO,OACR,EAGsDC,aAAa,MAAhE,WACF,mBAAOb,UAAWC,EAAlB,mBAEE,kBAAOa,KAAK,QAAQC,KAAK,cAE3B,mBAAOf,UAAWC,EAAlB,sBAEE,kBAAOa,KAAK,WAAWC,KAAK,iBAE9B,mBAAQf,UAAWC,EAAYa,KAAK,SAApC,sBAGL,EC/Bc,SAASE,IACpB,OACI,0BACI,SAACnB,EAAD,KAGX,C,gICLDoB,EAAAA,EAAAA,SAAAA,QAAyB,wCAEzB,IAAMC,EAAQ,SACNA,GACAD,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBAAwDC,EAC3D,EAHCA,EAAQ,WAKND,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAA8C,EACjD,EAGQE,GAAWC,EAAAA,EAAAA,IAAiB,gBAAD,mCAAkB,WAAOC,EAAUC,GAAjB,gGAE3BL,EAAAA,EAAAA,KAAW,eAAgBI,GAFA,cAE5CE,EAF4C,OAGlDL,EAAUK,EAASC,KAAKN,OAH0B,kBAI3CK,EAASC,MAJkC,yDAM3CF,EAASG,gBAAgB,KAAMC,UANY,yDAAlB,yDAU3BnB,GAAQa,EAAAA,EAAAA,IAAiB,aAAD,mCAAe,WAAOC,EAAUC,GAAjB,gGAErBL,EAAAA,EAAAA,KAAW,cAAeI,GAFL,cAEtCE,EAFsC,OAG5CL,EAAUK,EAASC,KAAKN,OAHoB,kBAIrCK,EAASC,MAJ4B,yDAMrCF,EAASG,gBAAgB,KAAMC,UANM,yDAAf,0DAUfN,EAAAA,EAAAA,IAAiB,cAAD,mCAAgB,WAAMO,EAAGL,GAAT,0FAEhDL,EAAAA,EAAAA,KAAW,gBAFqC,OAGtDC,IAHsD,wEAKvCI,EAASG,gBAAgB,KAAMC,UALQ,wDAAhB,wD","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login.js","redux/auth/auth-operations.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\",\"button\":\"LoginForm_button__LodJg\"};","import { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/auth/auth-operations\";\nimport css from './LoginForm.module.css';\n\n\nexport const LoginForm = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        dispatch(\n            logIn({\n                email: form.element.email.value,\n                password: form.element.password.value,\n            })\n        );\n        form.reset();\n    };\n\n    return (\n        <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label className={css.label}>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button className={css.button} type=\"submit\">Log In</button>\n    </form>\n    );\n};\n","import { LoginForm } from \"components/LoginForm/LoginForm\";\n\nexport default function Login() {\n    return (\n        <div>\n            <LoginForm/>\n        </div>\n    );\n}","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nexport const register = createAsyncThunk('auth/register', async (dataUser, thunkAPI) => {\n    try {\n        const response = await axios.post('/user/signup', dataUser);\n        token.set(response.data.token);\n        return response.data;\n    } catch (error) {\n        return thunkAPI.rejectWithValue(error.message);\n    }\n});\n\nexport const logIn = createAsyncThunk('auth/login', async (dataUser, thunkAPI) => {\n    try {\n        const response = await axios.post('/user/login', dataUser);\n        token.set(response.data.token);\n        return response.data;\n    } catch (error) {\n        return thunkAPI.rejectWithValue(error.message);\n    }\n});\n\nexport const LogOut = createAsyncThunk('auth/logout', async(_, thunkAPI) => {\n    try {\nawait axios.post('/user/logout');\ntoken.unset()\n    } catch (error) {\n        return thunkAPI.rejectWithValue(error.message);\n    }\n})"],"names":["LoginForm","dispatch","useDispatch","className","css","onSubmit","event","preventDefault","form","currentTarget","logIn","email","element","value","password","reset","autoComplete","type","name","Login","axios","token","register","createAsyncThunk","dataUser","thunkAPI","response","data","rejectWithValue","message","_"],"sourceRoot":""}