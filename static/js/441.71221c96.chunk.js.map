{"version":3,"file":"static/js/441.71221c96.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/selectors.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/ContactsBook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","export const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport css from './Filter.module.css'\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from \"redux/selectors\";\n\nconst Filter = ({onChange}) =>{\n    const filter = useSelector(getFilter);\n    console.log(filter);\n    return(\n        <label htmlFor=\"\" className={css.label} >Find contacts by name\n           <input \n           type=\"text\"\n           value={filter}\n           name=\"filter\"\n           onChange={onChange} />\n           </label>\n    )\n}\n\nexport default Filter;\n\n\nFilter.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    // value: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"Contacts_contactItem__qm4r1\",\"list\":\"Contacts_list__R3QeP\",\"button\":\"Contacts_button__vUlqW\",\"nameContact\":\"Contacts_nameContact__MVYl-\",\"buttonBox\":\"Contacts_buttonBox__yOjt0\",\"form\":\"Contacts_form__mYayM\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__r63M6\",\"modal\":\"Modal_modal__DJDMv\"};","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport css from './Modal.module.css';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({onCloseModal, children}) => {\n\nuseEffect(() => {\n    window.addEventListener('keydown', handleKeyDown )\n},);\n\n\nuseEffect(() => {\n   return () => {\n    window.removeEventListener('keydown', handleKeyDown )\n   };\n},)\n\n\nconst handleKeyDown = event => {\n    if (event.code === 'Escape') {\n        onCloseModal()\n    }\n};\n\n const handleBackdropClick = event => {\n    if(event.currentTarget === event.target) {\n        onCloseModal()\n    }\n };\n\n    \n        return createPortal(\n            <div className={css.overlay} onClick={handleBackdropClick}>\n  <div className={css.modal}>\n    {children}\n  </div>\n</div>,\nmodalRoot,\n        )\n    }","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport css from './Contacts.module.css';\nimport { useSelector } from \"react-redux\";\nimport {getContacts, getFilter} from 'redux/selectors';\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateContact } from \"redux/contactOperations\";\nimport { Modal } from \"components/Modal/Modal\";\n\n\nconst filteredContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n)}\n\n\nconst Contacts = ({onDelete}) => {\n    \nconst contacts = useSelector(getContacts);\nconst filter = useSelector(getFilter);\nconst filterOfContacts = filteredContacts(contacts, filter)\n\nconst dispatch = useDispatch();\n\nconst[showModal, setShowModal] = useState(false);\nconst[updateId, setUpdateId] = useState(null);\nconst[updateName, setUpdateName] = useState('');\nconst[updateNumber, setUpdateNumber] = useState('');\n\n\n\n\nconst openModal = (name, number, id) => {\n  setShowModal(true);\n  setUpdateId(id);\n  setUpdateName(name);\n  setUpdateNumber(number);\n}\n\nconst closeModal = () => {\n  setShowModal(false);\n}\n\nconst handleNameUpdate = (event) => {\n  setUpdateName(event.target.value);\n}\n\nconst handleNumberUpdate = (event) => {\n  setUpdateNumber(event.target.value);\n}\n\nconst handleUpdateContact = (event) => {\n  event.preventDefault();\n  dispatch(updateContact({ id: updateId, name: updateName, number: updateNumber }));\n  closeModal();\n}\n\n\n    return (\n        <div>\n          <ul className={css.list}>\n        {filterOfContacts.map(({id, name, number}) => (\n          <li\n          className={css.contactItem}\n          key={id}>\n            <p className={css.nameContact}>{name}: {number}</p>\n           <div className={css.buttonBox}>\n           <button  className={css.button} type=\"button\" onClick={() => openModal(name, number, id)}>Update</button>\n            <button  className={css.button} type=\"button\" onClick={() => onDelete(id)}>Delete</button>\n           </div>\n          </li>\n        ))}\n        \n       </ul>\n       {showModal && (<Modal onCloseModal={closeModal}>\n        <div className={css.boxForm} >\n        <form className={css.form} onSubmit={handleUpdateContact}>\n             <input\n         type=\"text\"\n         name=\"name\"\n         value={updateName}\n         onChange={handleNameUpdate}\n         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n         required\n        />\n            <input\n        type=\"tel\"\n        name=\"number\"\n        value={updateNumber}\n        onChange={handleNumberUpdate}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        />\n        <button className={css.button} type=\"submit\">Update</button>\n            </form>\n        </div>\n\n        <button  className={css.button} type=\"button\" onClick={closeModal}>Close</button>\n       </Modal>)}\n        </div>\n        )\n}\n\n\nexport default Contacts;\n\nContacts.propTypes = {\n      onDelete: PropTypes.func.isRequired,\n  };","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"buttonSubmit\":\"ContactForm_buttonSubmit__8QQ3D\"};","import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css'\n\n\nfunction ContactForm({onSubmit}) {\n\n    const[name, setName] = useState('');\n    const[number, setNumber] = useState('');\n\n// const handleNameChange = event => {\n//     setName(event.target.value);\n// };\n\n// const handleNumberChange = event => {\n//     setNumber(event.target.value);\n// };\n\nconst handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n        case 'name':\n            setName(value);\n            break;\n\n            case 'number':\n            setNumber(value);\n            break;\n    \n        default:\n            console.warm('This type of field is not processed');\n    }\n};\n\nconst handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    resetName();\n    resetNumber();\n}\n\nconst resetName = () => {\n    setName('')\n  };\n\n  const resetNumber = () => {\n    setNumber('')\n  };\n\n    \n        return (\n            <form className={css.form} onSubmit={handleSubmit}>\n            <label className={css.label}>\n            Name\n             <input\n         type=\"text\"\n         name=\"name\"\n         value={name}\n         onChange={handleChange}\n         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n         required\n        />\n            </label>\n           \n            <label htmlFor=\"\" className={css.label}>\n            Number\n            <input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        />\n            </label>\n        <button className={css.buttonSubmit} type=\"submit\">Add contact</button>\n            </form>\n        )\n    }\n\n\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    onSubmit: PropTypes.func.isRequired,\n}","import React, {useEffect} from \"react\";\nimport Filter from \"../components/Filter/Filter\";\nimport Contacts from \"../components/Contacts/Contacts\";\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { getContacts} from \"redux/selectors\";\nimport { filterContact } from \"redux/filterSlice\";\nimport { fetchContacts, addContact, deleteContact } from \"redux/contactOperations\";\n\n\nexport default function ContactsBook() {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n   \n   \n  \n   useEffect(() => {\n    dispatch(fetchContacts())\n   }, [dispatch]);\n  \n    const checkExistingContact = (array, newName) => {\n      return array.some(({ name }) => {\n        return newName.toLowerCase() === name.toLowerCase();\n      });\n    };\n  \n  \n    const handleAddContacts = (name,number) => {\n      const checkContact =checkExistingContact(contacts, name);\n      if (checkContact) {\n        alert (`${name} is already in contacts`)\n        return;\n      }\n      dispatch(addContact({name: name, number: number}))\n    };\n    \n    const handleDeleteContact = contactId => {\n     dispatch(deleteContact(contactId))\n    \n    };\n  \n    const changeFilter = event => {\n      dispatch(filterContact(event.target.value))\n    }\n  \n  \n  \n      return (\n        <div style={{\n          padding: 40,\n        }}>\n          <h1>Phonebook</h1>\n          <ContactForm \n          onSubmit={handleAddContacts}\n          />\n        \n         <h2>Contacts</h2>\n         <Filter onChange={changeFilter}/>\n         <Contacts\n         onDelete={handleDeleteContact}/>\n        \n        </div>\n      );\n    \n    \n  };"],"names":["getContacts","state","contacts","items","getFilter","filter","onChange","useSelector","console","log","htmlFor","className","css","type","value","name","modalRoot","document","querySelector","Modal","onCloseModal","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","event","code","createPortal","onClick","currentTarget","target","onDelete","filterOfContacts","contact","toLowerCase","includes","filteredContacts","dispatch","useDispatch","useState","showModal","setShowModal","updateId","setUpdateId","updateName","setUpdateName","updateNumber","setUpdateNumber","closeModal","map","id","number","openModal","onSubmit","preventDefault","updateContact","pattern","title","required","setName","setNumber","handleChange","warm","resetName","resetNumber","e","ContactsBook","fetchContacts","style","padding","newName","checkContact","some","alert","addContact","filterContact","contactId","deleteContact"],"sourceRoot":""}