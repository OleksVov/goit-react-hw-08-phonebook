{"version":3,"file":"static/js/704.8952c1be.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/selectors.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/ContactsBook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","export const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport css from './Filter.module.css'\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from \"redux/selectors\";\n\nconst Filter = ({onChange}) =>{\n    const filter = useSelector(getFilter);\n    console.log(filter);\n    return(\n        <label htmlFor=\"\" className={css.label} >Find contacts by name\n           <input \n           type=\"text\"\n           value={filter}\n           name=\"filter\"\n           onChange={onChange} />\n           </label>\n    )\n}\n\nexport default Filter;\n\n\nFilter.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    // value: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"Contacts_contactItem__qm4r1\",\"list\":\"Contacts_list__R3QeP\",\"buttonDelete\":\"Contacts_buttonDelete__MPvHt\",\"nameContact\":\"Contacts_nameContact__MVYl-\"};","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport css from './Contacts.module.css';\nimport { useSelector } from \"react-redux\";\nimport {getContacts, getFilter} from 'redux/selectors';\n\n\nconst filteredContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n)}\n\nconst Contacts = ({onDelete}) => {\n    \nconst contacts = useSelector(getContacts);\nconst filter = useSelector(getFilter);\nconst filterOfContacts = filteredContacts(contacts, filter)\n\n    return (\n        <ul className={css.list}>\n        {filterOfContacts.map(({id, name, number}) => (\n          <li\n          className={css.contactItem}\n          key={id}>\n            <p className={css.nameContact}>{name}: {number}</p>\n            <button  className={css.buttonDelete} type=\"button\" onClick={() => onDelete(id)}>Delete</button>\n          </li>\n        ))}\n        \n       </ul>\n        )\n}\n\n\nexport default Contacts;\n\nContacts.propTypes = {\n      onDelete: PropTypes.func.isRequired,\n  };","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"buttonSubmit\":\"ContactForm_buttonSubmit__8QQ3D\"};","import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css'\n\n\nfunction ContactForm({onSubmit}) {\n\n    const[name, setName] = useState('');\n    const[number, setNumber] = useState('');\n\n// const handleNameChange = event => {\n//     setName(event.target.value);\n// };\n\n// const handleNumberChange = event => {\n//     setNumber(event.target.value);\n// };\n\nconst handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n        case 'name':\n            setName(value);\n            break;\n\n            case 'number':\n            setNumber(value);\n            break;\n    \n        default:\n            console.warm('This type of field is not processed');\n    }\n};\n\nconst handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    resetName();\n    resetNumber();\n}\n\nconst resetName = () => {\n    setName('')\n  };\n\n  const resetNumber = () => {\n    setNumber('')\n  };\n\n    \n        return (\n            <form className={css.form} onSubmit={handleSubmit}>\n            <label className={css.label}>\n            Name\n             <input\n         type=\"text\"\n         name=\"name\"\n         value={name}\n         onChange={handleChange}\n         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n         required\n        />\n            </label>\n           \n            <label htmlFor=\"\" className={css.label}>\n            Number\n            <input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        />\n            </label>\n        <button className={css.buttonSubmit} type=\"submit\">Add contact</button>\n            </form>\n        )\n    }\n\n\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    onSubmit: PropTypes.func.isRequired,\n}","import React, {useEffect} from \"react\";\nimport Filter from \"../components/Filter/Filter\";\nimport Contacts from \"../components/Contacts/Contacts\";\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { getContacts} from \"redux/selectors\";\nimport { filterContact } from \"redux/filterSlice\";\nimport { fetchContacts, addContact, deleteContact } from \"redux/contactOperations\";\n\n\nexport default function ContactsBook() {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n   \n   \n  \n   useEffect(() => {\n    dispatch(fetchContacts())\n   }, [dispatch]);\n  \n    const checkExistingContact = (array, newName) => {\n      return array.some(({ name }) => {\n        return newName.toLowerCase() === name.toLowerCase();\n      });\n    };\n  \n  \n    const handleAddContacts = (name,number) => {\n      const checkContact =checkExistingContact(contacts, name);\n      if (checkContact) {\n        alert (`${name} is already in contacts`)\n        return;\n      }\n      dispatch(addContact({name: name, number: number}))\n    };\n    \n    const handleDeleteContact = contactId => {\n     dispatch(deleteContact(contactId))\n    \n    };\n  \n    const changeFilter = event => {\n      dispatch(filterContact(event.target.value))\n    }\n  \n  \n  \n      return (\n        <div style={{\n          padding: 40,\n        }}>\n          <h1>Phonebook</h1>\n          <ContactForm \n          onSubmit={handleAddContacts}\n          />\n        \n         <h2>Contacts</h2>\n         <Filter onChange={changeFilter}/>\n         <Contacts\n         onDelete={handleDeleteContact}/>\n        \n        </div>\n      );\n    \n    \n  };"],"names":["getContacts","state","contacts","items","getFilter","filter","onChange","useSelector","console","log","htmlFor","className","css","type","value","name","onDelete","filterOfContacts","contact","toLowerCase","includes","filteredContacts","map","id","number","onClick","onSubmit","useState","setName","setNumber","handleChange","event","target","warm","resetName","resetNumber","e","preventDefault","pattern","title","required","ContactsBook","dispatch","useDispatch","useEffect","fetchContacts","style","padding","newName","checkContact","some","alert","addContact","filterContact","contactId","deleteContact"],"sourceRoot":""}